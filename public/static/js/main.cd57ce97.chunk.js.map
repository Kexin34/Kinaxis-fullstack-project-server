{"version":3,"sources":["redux/action-types.js","request/ajax_request.js","request/index.jsx","utils/storageUtils.js","redux/actions.js","assets/imgs/logo.png","pages/login/login.jsx","config/menuConfig.js","components/left-nav/index.jsx","utils/dateUtils.js","components/header/index.jsx","pages/dashboard/dashboard.jsx","pages/category/category.jsx","pages/product/product-summary.jsx","utils/constants.js","pages/product/image-section.jsx","pages/product/addupdateModel/add-update.jsx","pages/product/product-detail.jsx","pages/product/product.jsx","pages/role/addModel.jsx","pages/role/authModel.jsx","pages/role/role.jsx","pages/404/404.jsx","pages/routeList/routes.jsx","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["GET_USER","CLEAR_USER","ERROR_MSG","SET_TITLE","request","url","data","type","Promise","resolve","reject","axios","get","params","post","then","response","catch","error","message","BASE","reqLogin","username","password","queryCategorys","parentId","queryCategory","categoryId","addCategory","categoryName","updateCategory","queryProducts","pageNum","pageSize","querySearchProducts","searchName","searchType","updateStatus","productId","status","deleteImg","name","addOrUpdateProduct","product","_id","updateRole","role","addRole","roleName","USER_KEY","storageUtils","getUser","JSON","parse","localStorage","getItem","saveUser","user","setItem","stringify","removeUser","removeItem","receiveUser","showErrorMsg","errorMsg","connect","state","login","dispatch","a","result","msg","props","useForm","form","currentUser","to","className","src","logo","alt","initialValues","remember","onFinish","values","Item","rules","required","whitespace","min","max","pattern","prefix","UserOutlined","placeholder","style","color","LockOutlined","htmlType","menuList","title","key","icon","DesktopOutlined","isPublic","AppstoreOutlined","children","ProfileOutlined","ShopOutlined","ContainerOutlined","setTitle","headTitle","withRouter","useState","openKey","setOpenKey","menuItems","setMenuItems","getMenuNodes","path","location","pathname","map","item","menus","indexOf","find","child","hasAccessRight","currItem","SubMenu","onClick","useEffect","selectedKeys","defaultOpenKeys","mode","theme","formateTime","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","logout","now","currentTime","setCurrentTime","timer","setTimer","setInterval","getTime","clearInterval","confirm","content","onOk","Dashboard","extra","Component","Category","loading","categorys","subCategorys","parentName","showStatus","updatedCategoryName","addedCategoryName","selectedParentId","createColumns","columns","dataIndex","width","render","category","showUpdateModel","displaySubCategory","loadCategorys","setState","displayCategorys","handleCancel","parendIdChange","option","console","log","showAddModel","addNewCategory","this","ArrowRightOutlined","margin","addButton","PlusOutlined","pagination","defaultPageSize","showQuickJumper","bordered","rowKey","dataSource","visible","onCancel","initialValue","onChange","value","Option","e","target","ProductSummary","products","total","searchWord","initColumns","price","history","push","loadProducts","list","success","rightButton","current","BASE_IMG_URL","changeBase","file","reader","FileReader","readAsDataURL","onload","onerror","ImageSection","previewDisplay","previewImage","ImgList","getImgs","showPreview","img","preview","originFileObj","smallImage","handleImgChange","fileList","length","imgs","index","uid","action","accept","listType","onPreview","React","ProductAddUpdate","formRef","createRef","options","initOptions","label","isLeaf","isUpdate","pCategoryId","getCategorys","subOptions","validatePrice","rule","callback","loadData","selectedOptions","selected","submit","validateFields","desc","categoryIds","imageCollection","pw","detail","goBack","ArrowLeftOutlined","marginRight","fontSize","ref","labelCol","span","wrapperCol","TextArea","autoSize","minRows","maxRows","validator","addonAfter","ProductDetail","mainCat","subCat","all","results","height","Product","component","exact","AddModel","setForm","Layout","AuthModel","getTreeNodes","reduce","pre","getMenus","checkedKeys","onCheck","treeData","nextProps","treeDatas","disabled","defaultExpandAll","checkable","checked","Role","roles","isDisplayAdd","isDisplayAuth","createColumn","create_time","loadRoles","handleRow","event","resetFields","err","alert","authSection","auth_time","auth_name","handleCancelChange","rowSelection","selectedRowKeys","onSelect","onRow","NotFound","goHome","replace","Footer","Sider","Content","Routes","minHeight","backgroundColor","from","textAlign","App","Login","combineReducers","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.cd57ce97.chunk.js","sourcesContent":["export const GET_USER = 'get_user'\r\nexport const CLEAR_USER = 'clear_user'\r\nexport const ERROR_MSG = 'error_msg'\r\nexport const SET_TITLE = 'set_title'\r\n","/*  Modualize ajax request, return promise object */\r\nimport axios from 'axios'\r\nimport { message } from 'antd'\r\n\r\nexport default function request(url, data = {}, type = 'GET'){\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let promise\r\n\r\n    if (type === 'GET') {               // GET\r\n      promise = axios.get(url, { \r\n        params: data\r\n      })\r\n    } else {                            // POST\r\n      promise = axios.post(url, data)\r\n    }\r\n    promise.then(response => {          \r\n      resolve(response.data)\r\n    }).catch(error => {                 \r\n      message.error('Request fail：' + error.message)\r\n    })\r\n  })\r\n}\r\n","import request from './ajax_request'\r\n\r\nconst BASE = 'https://mysterious-fjord-53168.herokuapp.com'\r\n\r\n// Login\r\nexport const reqLogin = (username, password) => request(BASE + '/login', {username, password}, 'POST')\r\n\r\n/* Categoty API */\r\n\r\n// Load main/seb category list\r\nexport const queryCategorys = (parentId) => request(BASE + '/manage/category/list', {parentId})\r\n// Load specific category\r\nexport const queryCategory = (categoryId) => request(BASE + '/manage/category/info',{categoryId})\r\n// Add category\r\nexport const addCategory = (categoryName, parentId) => {request(BASE + '/manage/category/add', {categoryName, parentId}, 'POST')}\r\n// Update category\r\nexport const updateCategory = ({categoryId, categoryName}) => request(BASE + '/manage/category/update', {categoryName, categoryId}, 'POST')\r\n\r\n/* Product API */\r\n\r\n// Load product list base on page\r\nexport const queryProducts = (pageNum, pageSize) => request(BASE + '/manage/product/list',{pageNum, pageSize})\r\n// Search product\r\nexport const querySearchProducts = ({pageNum, pageSize, searchName, searchType}) => request(BASE+'/manage/product/search', {\r\n  pageNum,pageSize, [searchType]: searchName \r\n})\r\n// Update product status\r\nexport const updateStatus = (productId,status) => request(BASE + '/manage/product/updateStatus',{productId,status},'POST')\r\n// Delete product image\r\nexport const deleteImg = (name) => request(BASE + '/manage/img/delete',{name},'POST')\r\n// Add / update single product\r\nexport const addOrUpdateProduct = (product) => {\r\n  request(BASE + '/manage/product/' + (product._id ? 'update':'add') ,product,'POST')\r\n}\r\n\r\n\r\n/* Account role */\r\n// Load all accounts\r\nexport const loadRoles = () => request(BASE + '/manage/role/list')\r\n// Update account's role\r\nexport const updateRole = (role) => request(BASE+'/manage/role/update',role,'POST')\r\n// Create new account\r\nexport const addRole = (roleName) => request(BASE+'/manage/role/add',{roleName},'POST')\r\n\r\n\r\n\r\n//// \"proxy\": \"http://zlx.cool:5000\"\r\n// \"proxy\": \"http://localhost:5000\"\r\n// \"proxy\": \"http://120.55.193.14:5000\"","const USER_KEY = 'user_key'\r\n\r\nconst storageUtils = {\r\n  getUser(){\r\n    return JSON.parse(localStorage.getItem(USER_KEY) || '{}' )\r\n  },\r\n  saveUser(user) {\r\n    localStorage.setItem(USER_KEY,JSON.stringify(user))\r\n  },\r\n  removeUser(){\r\n    localStorage.removeItem(USER_KEY)\r\n  }\r\n}\r\n\r\nexport default storageUtils","import {\r\n  GET_USER,\r\n  CLEAR_USER,\r\n  ERROR_MSG,\r\n  SET_TITLE,\r\n} from './action-types'\r\nimport {reqLogin} from '../request'\r\nimport storageUtils from '../utils/storageUtils'\r\n\r\nexport const login = (username,password) => {\r\n  return async dispatch => {\r\n    const result = await reqLogin(username, password)  \r\n    if (result.status === 0){\r\n      const user = result.data\r\n      storageUtils.saveUser(user)\r\n      dispatch(receiveUser(user))\r\n    }\r\n    const msg = result.msg\r\n    dispatch(showErrorMsg(msg))\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  storageUtils.removeUser()\r\n  return {type: CLEAR_USER}\r\n}\r\n\r\nexport const receiveUser = (user) => ({type: GET_USER, user})\r\nexport const setTitle = (headTitle) => ({type: SET_TITLE, data: headTitle})\r\nexport const showErrorMsg = (errorMsg) => ({type: ERROR_MSG,errorMsg})\r\n","export default __webpack_public_path__ + \"static/media/logo.5df66122.png\";","import React from 'react'\r\nimport { Form, Input, Button} from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../redux/actions'\r\nimport { Redirect } from 'react-router-dom';\r\nimport logo from '../../assets/imgs/logo.png'\r\nimport './login.less'\r\n\r\nconst Login = (props) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const currentUser = props.user\r\n  if (currentUser._id) {\r\n    return <Redirect to = '/dashboard'/>\r\n  }\r\n  \r\n  // Login request\r\n  const onFinish = (values) => {\r\n    const { username, password } = values\r\n    props.login(username, password)\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <header className=\"login-header\">\r\n        <img src={ logo } alt=\"logo\"/>\r\n        <h1>Kinaxis Take-home Project</h1>\r\n      </header>\r\n      <section className=\"login-content\">\r\n        <div className={ currentUser.errorMsg ? 'error-msg show':'error-msg' }>{ currentUser.errorMsg }</div>\r\n        <h4>Login to</h4>\r\n        <h4>E-commerce Back-end platform</h4>\r\n        <Form form={ form } name=\"normal_login\" className=\"login-form\"\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          onFinish={ onFinish }\r\n        >\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[\r\n              {required: true, whitespace: true, message: 'Username required'},\r\n              {min: 4, message: 'Username requires at least 4 characters'},\r\n              {max: 12, message: 'Maximun 12 characters'},\r\n              {pattern: /^[a-zA-Z0-9_]+$/, message: 'Must be letter, numbers or underscores'},\r\n            ]}\r\n          >\r\n            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" style={{ color: 'rgba(0,0,0,.25)' }} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              { required: true, message: 'Password required' },\r\n              {max: 25, message: 'Password length should no more than 25'},\r\n            ]}\r\n          >\r\n            <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} type=\"password\" placeholder=\"Password\" style={{ color: 'rgba(0,0,0,.25)' }}/>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n              Login\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  state => ({ user: state.user }),\r\n  {login}\r\n)(Login)\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {\r\n  AppstoreOutlined,\r\n  ProfileOutlined,\r\n  ShopOutlined,\r\n  DesktopOutlined,\r\n  ContainerOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst menuList = [\r\n    {\r\n      title: 'Dashboard',\r\n      key: '/dashboard', \r\n      icon: <DesktopOutlined />,  \r\n      isPublic: true \r\n    },\r\n    {\r\n      title: 'Product', \r\n      key: '/products',  \r\n      icon: <AppstoreOutlined /> ,\r\n      children: [  \r\n        {\r\n          title: 'Category', \r\n          key: '/category',  \r\n          icon: <ProfileOutlined />\r\n        },\r\n        {\r\n          title: 'Product Management', \r\n          key: '/product',  \r\n          icon: <ShopOutlined />\r\n        }\r\n      ]\r\n    },\r\n    {\r\n        title: 'Account', \r\n        key: '/role',  \r\n        icon: <ContainerOutlined />,  \r\n    },\r\n]\r\nexport default menuList","import React, {  useState, useEffect   } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { Menu } from 'antd';\r\nimport { connect } from 'react-redux'\r\nimport { setTitle } from '../../redux/actions'\r\nimport logo from '../../assets/imgs/logo.png'\r\nimport menuList from '../../config/menuConfig'\r\nimport './index.less'\r\n\r\n// Left menu navigation bar\r\n\r\nconst LeftNav = (props) => {\r\n  const [openKey, setOpenKey] = useState([]);   \r\n  const [menuItems, setMenuItems] = useState([]);  // dynamically display menu item\r\n  \r\n  // Check current use's access right to each menu item\r\n  const hasAccessRight = (item) => {\r\n    const {key, isPublic} = item\r\n    const menus = props.user.role.menus\r\n    const username = props.user.username\r\n\r\n    // If current user has full access right for an menu section\r\n    if (username === 'admin' || isPublic || menus.indexOf(key) !== -1) {\r\n      return true\r\n    } else if(item.children) {\r\n      // If user has access right to some children section of current menu\r\n      return !!item.children.find(child => menus.indexOf(child.key) !== -1)\r\n    }\r\n    return false\r\n  }\r\n   \r\n  const getMenuNodes = (menuList) => {\r\n    const path = props.location.pathname\r\n\r\n    // Display menu items that under user's authority\r\n    return menuList.map(item => {\r\n      if (hasAccessRight(item)) {\r\n        if (!item.children) { \r\n          // Check if the end menu is the same as path, update head title in redux\r\n          if (item.key === path || path.indexOf(item.key) === 0) {\r\n            props.setTitle(item.title)\r\n          }\r\n          return (\r\n            <Menu.Item key={item.key} icon={item.icon}>\r\n              <Link to={item.key} onClick={()=>props.setTitle(item.title)}>{item.title}</Link>\r\n            </Menu.Item>\r\n          )\r\n        } else {\r\n          // If current is not end menu, find the match end child node with the path\r\n          const currItem = item.children.find(currItem => path.indexOf(currItem.key) === 0 )\r\n          // Expand the child menu\r\n          if (currItem) {\r\n            setOpenKey(item.key)\r\n          }\r\n          return (\r\n            <Menu.SubMenu key={item.key} icon={item.icon} title={item.title}>\r\n               {getMenuNodes(item.children)}\r\n            </Menu.SubMenu>\r\n          )\r\n        }\r\n      }else{\r\n        return (null);\r\n      }\r\n    })\r\n  } \r\n\r\n  useEffect(() => {\r\n    setMenuItems(getMenuNodes(menuList))\r\n  }, []);\r\n\r\n  let path = props.location.pathname\r\n\r\n\r\n\r\n  return (\r\n      <div className=\"left-nav\">\r\n        <Link to=\"/\" className=\"left-nav-header\">\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>Management Platform</h1>\r\n        </Link>\r\n        <Menu\r\n          selectedKeys={[path]}\r\n          defaultOpenKeys={[openKey]}\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n        >\r\n          {menuItems}  \r\n        </Menu>\r\n      </div> \r\n    )\r\n}\r\n\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {setTitle}\r\n)(withRouter(LeftNav))    // HOC, to access the location\r\n","export function formateTime (time) {\r\n    if (!time) return ''\r\n    let date = new Date(time)\r\n    return `${date.getFullYear()}/${(date.getMonth() + 1)}/${date.getDate()}\r\n    \\xa0 ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()} `\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Modal, Button} from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { formateTime } from '../../utils/dateUtils'\r\nimport { logout } from '../../redux/actions'\r\nimport './index.less'\r\n\r\nconst Header = (props) => {\r\n  const [currentTime, setCurrentTime] = useState(formateTime(Date.now())); \r\n  const [timer, setTimer] = useState({}); \r\n  \r\n  // Timer, update per second\r\n  const getTime = () => {\r\n    const timer = setInterval(() => {\r\n      const currentTime = formateTime(Date.now())\r\n      setCurrentTime(currentTime);\r\n    }, 1000);\r\n    setTimer(timer);\r\n  }\r\n\r\n  // Logout\r\n  const logout = () => {\r\n    Modal.confirm({\r\n      content: 'Are you sure you want to logout?',\r\n      onOk: () => {\r\n        props.logout()\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getTime();\r\n  }, [])\r\n\r\n  // Remove timer\r\n  useEffect(() => {\r\n    return () => {\r\n      clearInterval(timer)\r\n    }\r\n  }, [timer])\r\n\r\n  const username = props.user.username\r\n  const title = props.headTitle \r\n\r\n  return (\r\n      <div className=\"header\">\r\n          <div className=\"header-top\">\r\n            <span>{username}</span>\r\n            <Button type=\"link\" onClick={logout}>Logout</Button>\r\n          </div>\r\n          <div className=\"header-bottom\">\r\n            <div className=\"header-bottom-left\">{title}</div>\r\n            <div className=\"header-bottom-right\">\r\n              <span>{currentTime}</span>\r\n            </div>\r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  state => ({headTitle: state.headTitle, user: state.user}),\r\n  {logout}\r\n)(withRouter(Header)) \r\n","import React, { Component } from 'react'\r\nimport {\r\n    Icon,\r\n    Card,\r\n    Timeline\r\n  } from 'antd'\r\nexport default class Dashboard extends Component {\r\n    render() {\r\n        return (\r\n            <div className='dashboard'>\r\n                <Card title='Take home project: Simple e-Commerce management platform' extra={<Icon type=\"reload\"/>} className=\"home-table-right\">\r\n                    <Timeline>\r\n                    <Timeline.Item color=\"green\">Basic module design</Timeline.Item>\r\n                    <Timeline.Item color=\"green\">Backend API implement</Timeline.Item>\r\n                    <Timeline.Item color=\"red\">\r\n                        <p>User Login</p>\r\n                        <p>Category management</p>\r\n                        <p>Product management</p>\r\n                    </Timeline.Item>\r\n                    <Timeline.Item>\r\n                        <p>Account role authorization</p>\r\n                        <p>File upload</p>\r\n                    </Timeline.Item>\r\n                    </Timeline>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport { Card, Table, Button, message, Modal, Form,Input, Select} from 'antd'\nimport {PlusOutlined, ArrowRightOutlined} from  '@ant-design/icons'\nimport {queryCategorys, addCategory, updateCategory} from '../../request/index'\n\n// 商品分类路由\nexport default class Category extends Component {\n\n    state = {\n      loading: false, \n      categorys: [],    // main category list\n      subCategorys: [], // sub category list\n      parentId: '0',    \n      parentName: '', \n      showStatus: 0,    // display add/update module, 0: hidden, 1: add, 2: update \n      updatedCategoryName: \"\",\n      addedCategoryName: \"\",\n      selectedParentId: '0',\n    }\n\n    componentWillMount() {\n      this.createColumns()\n    }\n\n    componentDidMount() {\n      this.loadCategorys()   // load main category list\n    }\n\n    createColumns = () => {\n      this.columns = [\n        {\n          title: 'Category',\n          dataIndex: 'name',\n        },\n        {\n          title: 'Operation',\n          width: 300,\n          render: (category) => (  \n            <span>\n              <Button type=\"link\" onClick={() => {this.showUpdateModel(category)}}>Update</Button>\n              {this.state.parentId === '0' ? \n                <Button type=\"link\" onClick={()=>{this.displaySubCategory(category)}}>Sub Category</Button> : \n                null\n              }\n            </span>\n          )\n        },\n      ]; \n    }\n\n    // Load main/sub category list\n    loadCategorys = async (parentId) => {\n      this.setState({\n        loading: true\n      })   \n      parentId = parentId || this.state.parentId\n      const response = await queryCategorys(parentId)\n\n      this.setState({loading: false})\n\n      if (response.status === 0) {    // success, update corresponding category list\n        if (parentId === '0') {       \n          this.setState({categorys: response.data})\n        } else {                      \n          this.setState({subCategorys: response.data})\n        }\n      } else {\n        message.error('Request Fail')\n      }\n    }\n\n    // Given main category, load its sub cateroty list\n    displaySubCategory = (category) => {\n      this.setState({\n        parentId: category._id,\n        parentName: category.name,\n        selectedParentId: category._id,\n      },() => {           \n          this.loadCategorys()  \n      })\n    }\n\n    // Display main category\n    displayCategorys = () => {\n      this.setState({ \n        parentId: '0',\n        parentName: '',\n        subCategorys: []\n      })\n    }\n\n    handleCancel = () => {   \n      this.setState({     \n        showStatus: 0,\n        updatedCategoryName: \"\",\n        addedCategoryName:\"\",\n        selectedParentId:'0',\n      })\n    }\n\n    parendIdChange = (option) => {\n      this.setState({\n        selectedParentId: option\n      },() => {          \n        console.log(this.state.selectedParentId);\n      })\n    };\n\n    showAddModel = () => {\n      this.setState({\n        showStatus: 1\n      })\n    }\n\n    // Add new category, once added, reload category list\n    addNewCategory = async() => {\n      const parentId = this.state.selectedParentId\n      const categoryName = this.state.addedCategoryName\n\n      this.setState({             \n        showStatus: 0,\n        updatedCategoryName: \"\"\n      })\n\n      const result = await addCategory(categoryName, parentId)\n      if (parentId === this.state.parentId) {\n        this.loadCategorys()\n      } else if (parentId === '0') {\n        this.loadCategorys('0')\n      }\n      \n    }\n\n    // Display category update model\n    showUpdateModel = (category) => {\n      this.category = category \n      this.setState({\n        showStatus: 2,\n      })\n    }\n    \n    // Update category requst\n    updateCategory = async() => {\n      const categoryId = this.category._id\n      const categoryName = this.state.updatedCategoryName\n      this.setState({     \n        showStatus: 0,\n        updatedCategoryName: \"\"\n      })\n\n      const result = await updateCategory({categoryId,categoryName})\n      if (result.status  === 0) {\n        this.loadCategorys()\n      } \n    }\n\n    render() {\n        const {loading, categorys, subCategorys, parentId, parentName, showStatus} = this.state              \n        const category = this.category || {} \n\n        // Left panel\n        const title = parentId === '0' ? 'Main Category' : (\n          <span>\n            <Button type=\"link\" onClick={this.displayCategorys}>Main Category</Button>\n            <ArrowRightOutlined style={{margin: 10}}/>\n            <span>{parentName}</span>\n          </span>\n        )\n\n        // Right panel\n        const addButton = (\n          <Button onClick={this.showAddModel} type='primary'>\n            <PlusOutlined />\n            Add\n          </Button>\n      )\n\n        return (\n            <Card title={title} extra={addButton}>\n              <Table loading={loading} \n                pagination={{defaultPageSize: 8, showQuickJumper: true}} \n                bordered rowKey='_id' \n                dataSource={parentId === '0' ? categorys : subCategorys} \n                columns={this.columns} />\n              <Modal\n                visible={showStatus === 1}\n                title=\"Add category\"\n                onOk={this.addNewCategory}\n                onCancel={this.handleCancel}      \n              >\n                <Form form={this.form}>\n                  <Form.Item name='parentId' initialValue={parentId}>\n                    <Select\n                      onChange={(value) => this.parendIdChange(value)}\n                    >\n                      <Select.Option value='0'>Main Catergory</Select.Option>\n                      {\n                        categorys.map((item) => {\n                          return(\n                            <Select.Option key={item._id} value={item._id}>{item.name}</Select.Option>\n                          )\n                        })\n                      }\n                    </Select>\n                  </Form.Item>\n                  \n                  <Form.Item \n                    name='categoryName' \n                    initialValue=''\n                    rules={[{ required: true, message: 'Name required' },]}\n                  >\n                    <Input placeholder='Pleace enter Category name'\n                      onChange={e => this.setState({addedCategoryName: e.target.value})}\n                      value={this.addedCategoryName}\n                    />\n                  </Form.Item>\n                </Form>\n              </Modal> \n              <Modal\n                visible={showStatus === 2}\n                title=\"Update Category\"\n                onOk={this.updateCategory}\n                onCancel={this.handleCancel}\n              >\n                <Form form={this.form}>\n                  <Form.Item name='categoryName' \n                    initialValue={category.name}\n                    rules={[{ required: true, message: 'Name is required' }]}>\n                    <Input \n                      placeholder='Please enter category name'\n                      onChange={e => this.setState({updatedCategoryName: e.target.value})}\n                      value={this.updatedCategoryName}\n                    />\n                  </Form.Item>\n                </Form>\n              </Modal>\n            </Card>\n        )\n    }\n}\n","import React, { Component } from 'react'\r\nimport {Card,Select, Input, Button,Table, message} from 'antd'\r\nimport {PlusOutlined} from  '@ant-design/icons'\r\nimport { queryProducts, querySearchProducts, updateStatus } from '../../request/index'\r\n\r\nexport default class ProductSummary extends Component {\r\n  state = {\r\n      products: [],     // Product list\r\n      total: 0,         // Product total count\r\n      loading: false, \r\n      searchWord: '',   // Search keyword\r\n      searchType: 'productName',  // Search based on type (name, desc)\r\n  }\r\n\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: 'Description',\r\n        dataIndex: 'desc',\r\n      },\r\n      {\r\n        title: 'Price',\r\n        dataIndex: 'price',\r\n        render: (price) => '$' + price\r\n      },\r\n      {\r\n          width: '100px',\r\n          title: 'Status',\r\n          render: (item) => {\r\n            const {status,_id} = item\r\n            return (\r\n              <span>\r\n                  <Button onClick={()=>{this.updateStatus(_id, status === 1 ? 2 : 1)}} \r\n                  type='primary'>{status === 1 ? 'Remove' : 'Launch'}</Button>\r\n                  <span>{status === 1 ? 'Launched' : 'Removed'}</span>\r\n              </span>\r\n            )\r\n          }\r\n        },\r\n        {\r\n          width: '100px',\r\n          title: 'Opration',\r\n          render: (product) => {\r\n            return (\r\n              <span>\r\n                <Button type=\"link\" onClick={()=>{this.props.history.push('/product/detail', {product} )}}>Detail</Button>\r\n                <Button type=\"link\" onClick={()=>this.props.history.push('/product/addupdate',product)}>Update</Button>\r\n              </span>\r\n            )\r\n          }\r\n        },\r\n    ];\r\n    \r\n  }\r\n\r\n  // Load request, may contain search request\r\n  loadProducts = async (pageNum) => {\r\n    this.pageNum = pageNum    \r\n    this.setState({loading: true}) \r\n    const {searchWord, searchType} = this.state\r\n\r\n    let response\r\n    if (searchWord) {\r\n      response = await querySearchProducts({pageNum, pageSize: 5, searchName: searchWord, searchType})\r\n    } else {  \r\n      response = await queryProducts(pageNum, 5)\r\n    }\r\n\r\n    this.setState({loading:false})\r\n\r\n    // Success, update products list\r\n    if (response.status === 0) {\r\n      const {total, list} = response.data\r\n      this.setState({\r\n        total,\r\n        products: list\r\n      })\r\n    }\r\n  }\r\n\r\n  // Update product status \r\n  updateStatus = async (productId, status) => {\r\n    const response = await updateStatus(productId, status)\r\n    if (response.status === 0) {\r\n      message.success('Update Success')\r\n      this.loadProducts(this.pageNum)  // re-render list\r\n    }\r\n  }\r\n\r\n  componentWillMount(){\r\n      this.initColumns()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadProducts(1)\r\n  }\r\n\r\n  render() {\r\n      const {products, total, loading, searchWord, searchType} = this.state\r\n      const title = (\r\n        <span>\r\n          <Select value={searchType} style={{width: 120}}\r\n            onChange={value => this.setState({searchType: value})}>\r\n            <Select.Option value='productName'>Name</Select.Option>\r\n            <Select.Option value='productDesc'>Description</Select.Option>\r\n          </Select>\r\n          <Input onChange={e => this.setState({searchWord: e.target.value})}\r\n            value={searchWord} placeholder='Keyword' style={{width:150,margin: '0 15px'}}\r\n          />\r\n          <Button onClick={()=>{this.loadProducts(1)}} type='primary'>Search</Button>\r\n        </span>\r\n      )\r\n\r\n      const rightButton = (\r\n          <Button \r\n            onClick={() => this.props.history.push('/product/addupdate')}\r\n            type='primary'>\r\n            <PlusOutlined/>\r\n            Add product\r\n          </Button>\r\n      )\r\n      return (\r\n          <Card title={title} extra={rightButton}>\r\n            <Table \r\n            loading={loading}\r\n            bordered\r\n            rowKey='_id' \r\n            dataSource={products}\r\n            columns={this.columns}\r\n            pagination={{\r\n              current: this.pageNum,\r\n              defaultPageSize: 5,\r\n              showQuickJumper: true,\r\n              total,\r\n              onChange: this.loadProducts\r\n            }}/>\r\n          </Card>\r\n      )\r\n  }\r\n}\r\n","\r\n\r\n//export const BASE_IMG_URL = 'http://zlx.cool:5000/upload/'\r\n//export const BASE_IMG_URL = 'http://localhost:5000/upload/'\r\n//export const BASE_IMG_URL = 'http://120.55.193.14:5000/upload/'\r\n//https://mysterious-fjord-53168.herokuapp.com/\r\nexport const BASE_IMG_URL = 'https://mysterious-fjord-53168.herokuapp.com/'\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { message, Upload, Modal } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport {BASE_IMG_URL} from '../../utils/constants'\r\nimport { deleteImg } from '../../request'\r\n\r\nconst changeBase = (file) => {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nexport default class ImageSection extends React.Component {\r\n  static propTypes = {\r\n    imgs: PropTypes.array\r\n  }\r\n\r\n  state = {\r\n    previewDisplay: false,    \r\n    previewImage: '',         // URL\r\n    ImgList: [],\r\n  };\r\n\r\n  constructor(props){\r\n    super(props)\r\n    const {imgs} = this.props\r\n    let ImgList = []\r\n    \r\n    if (imgs && imgs.length > 0 ) {\r\n      ImgList = imgs.map((img,index) => ({\r\n        uid: -index,\r\n        name: img,\r\n        status: 'done',\r\n        url: BASE_IMG_URL + img\r\n      }))\r\n    }\r\n\r\n    this.state = ({\r\n      previewDisplay: false, \r\n      smallImage: '',\r\n      ImgList  \r\n    })\r\n  }\r\n\r\n  getImgs = () => {\r\n      return this.state.ImgList.map(file => file.name)\r\n  }\r\n\r\n  showPreview = async (img) => {\r\n    if (!img.url && !img.preview) {\r\n      img.preview = await changeBase(img.originFileObj);\r\n    }\r\n    this.setState({\r\n      smallImage: img.url || img.preview,\r\n      previewDisplay: true,\r\n    });\r\n  };\r\n\r\n  handleImgChange = async ({ file, fileList }) => {\r\n    if (file.status === 'done') {\r\n        const result = file.response   \r\n        if (result.status === 0) {\r\n            message.success('Upload success')\r\n            const {name,url} = result.data\r\n            file = fileList[fileList.length-1]\r\n            file.name = name\r\n            file.url = url\r\n        } else {\r\n            message.error('Upload fail')\r\n        }\r\n    } else if (file.status === 'removed') {\r\n        const result = await deleteImg(file.name)\r\n        if (result.status === 0) {\r\n            message.success('Delete success')\r\n        } else {\r\n            message.error('Delete fail')\r\n        }\r\n    }\r\n    this.setState({ ImgList: fileList })\r\n  };\r\n\r\n  handleCancel = () => this.setState({ previewDisplay: false });\r\n\r\n  render() {\r\n    const { ImgList, previewDisplay, smallImage } = this.state;\r\n    \r\n    return (\r\n      <div>\r\n        <Upload\r\n          //action=\"http://120.55.193.14:5000/manage/img/upload\"  \r\n          //action=\"http://localhost:5000/manage/img/upload\"  \r\n          action=\"https://mysterious-fjord-53168.herokuapp.com/manage/img/upload\"\r\n          fileList={ImgList} \r\n          accept='image/*' \r\n          name='image'  \r\n          listType=\"picture-card\" \r\n          onPreview={this.showPreview}\r\n          onChange={this.handleImgChange}\r\n        >\r\n          {ImgList.length >= 4 ? null \r\n            :(<div>\r\n                <PlusOutlined /> \r\n                <div>Upload</div>\r\n              </div>\r\n          )}\r\n        </Upload>\r\n        <Modal visible={previewDisplay} onCancel={this.handleCancel}>\r\n          <img alt=\"img\" style={{ width: '100%' }} src={smallImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Card,Form,Input,Cascader,Button, message} from 'antd'\r\nimport { queryCategorys, addOrUpdateProduct} from '../../../request/index'\r\nimport ImageSection from '../image-section' \r\n\r\nimport { ArrowLeftOutlined } from '@ant-design/icons';\r\nconst {Item} = Form\r\n\r\nexport default class ProductAddUpdate extends Component {\r\n  formRef = React.createRef();\r\n\r\n  state = {\r\n    options: [],\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.pw = React.createRef()\r\n  }\r\n\r\n  // Update Category Options array, based on categorys list\r\n  initOptions = async (categorys) => {\r\n    const options = categorys.map(item => ({\r\n      value: item._id,\r\n      label: item.name,\r\n      isLeaf: false,  \r\n    }))\r\n\r\n    // If this is a sub-category product update\r\n    const {isUpdate, product} = this\r\n    const {pCategoryId} = product\r\n    \r\n    if (isUpdate && pCategoryId !== '0') {\r\n      const subCategorys = await this.getCategorys(pCategoryId)\r\n      // Generate sub-category dropdown options \r\n      const subOptions = subCategorys.map(item =>({\r\n        value: item._id,\r\n        label: item.name,\r\n        isLeaf: true,\r\n      }))\r\n\r\n      // Find the cooresponding main category \r\n      const currentOption = options.find(option => option.value === pCategoryId)\r\n      // Connect the main and sub category option\r\n      currentOption.children = subOptions\r\n    }\r\n\r\n    this.setState({options})\r\n  }\r\n\r\n  getCategorys = async (parentId) => {\r\n    const result = await queryCategorys(parentId)\r\n    if (result.status === 0) {\r\n      const categorys = result.data\r\n      // Check if this is main or sub category\r\n      if (parentId === '0') {\r\n        this.initOptions(categorys)\r\n      } else {\r\n        return categorys\r\n      }\r\n    }\r\n  }\r\n\r\n  validatePrice = (rule, value, callback) => {\r\n    if (value * 1 > 0) {\r\n      return Promise.resolve()\r\n    } else { \r\n      return Promise.reject('Price should be greater than 0')\r\n    }\r\n  }\r\n\r\n  loadData = async selectedOptions => {\r\n    const selected = selectedOptions[0]\r\n    selected.loading = true\r\n\r\n    // Request sub-category list\r\n    const subCategorys = await this.getCategorys(selected.value)\r\n    selected.loading = false\r\n\r\n    if (subCategorys && subCategorys.length > 0) {\r\n      // Sub-category exist, generate sub-category options \r\n      const subOptions = subCategorys.map(item =>({\r\n        value: item._id,\r\n        label: item.name,\r\n        isLeaf: true,  \r\n      }))\r\n      selected.children = subOptions\r\n    } else {\r\n      // Current list does not have sub-category\r\n      selected.isLeaf = true \r\n    }\r\n    \r\n    this.setState({\r\n      options: [...this.state.options],\r\n    })\r\n  }\r\n\r\n  submit = () => {\r\n    // Form validation before sending request\r\n    this.formRef.current.validateFields()\r\n    .then( async values => {\r\n\r\n      const {name,desc,price,categoryIds} = values\r\n      let pCategoryId,categoryId\r\n      if (categoryIds.length === 1) {\r\n        pCategoryId = '0'\r\n        categoryId = categoryIds[0]\r\n      } else {\r\n        pCategoryId = categoryIds[0]\r\n        categoryId = categoryIds[1]\r\n      }\r\n      const imageCollection = this.pw.current.getImgs()\r\n      const detail = \"\";   // TODO: text editor\r\n\r\n      const product = {name, desc, price, imgs: imageCollection, detail, pCategoryId, categoryId}\r\n\r\n      if (this.isUpdate) {  // required ID if update\r\n        product._id = this.product._id\r\n      }\r\n\r\n      const result = await addOrUpdateProduct(product)\r\n      if (result && result.status == 0) {\r\n        message.success('Success')\r\n      } else if (result && result.status != 0){\r\n        message.error(`Fail to ${this.isUpdate ? 'Update' : 'Add'} product`)\r\n      }\r\n      this.props.history.goBack()\r\n    })\r\n    .catch(error => {\r\n      console.log('Request error', error);\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCategorys('0')  \r\n  }\r\n\r\n  componentWillMount(){\r\n    const product = this.props.location.state\r\n    this.isUpdate = !!product  // convert to boolean\r\n    this.product = product || {}\r\n  }\r\n  \r\n  render() {\r\n      const {isUpdate, product} = this\r\n      const {pCategoryId, categoryId, imgs} = product\r\n      const categorys = []\r\n      if (isUpdate) {\r\n        if (pCategoryId === '0') {\r\n          categorys.push(categoryId)\r\n        } else {\r\n          categorys.push(pCategoryId)\r\n          categorys.push(categoryId)\r\n        }\r\n      }\r\n\r\n      const title = (\r\n        <span>\r\n          <Button type=\"link\" onClick={()=>this.props.history.goBack()}>\r\n            <ArrowLeftOutlined style={{marginRight:10, fontSize:20}}/>\r\n          </Button>\r\n          <span>{isUpdate?'Update':'Add'}</span>\r\n        </span>\r\n      )\r\n\r\n        return (\r\n          <Card title={title}>\r\n            <Form ref={this.formRef} labelCol={{ span: 7}} wrapperCol={{ span: 10}} >\r\n              <Item name='name' \r\n                rules={[ { required: true, message: 'Name is required' }]} \r\n                initialValue={product.name} label='Product name'>\r\n                <Input placeholder='Please enter product name'/>\r\n              </Item>\r\n              <Item name='desc' initialValue={product.desc} \r\n                rules={[ { required: true, message: 'Description is required' }]} \r\n                label='Prduct Description'>\r\n                <Input.TextArea placeholder='Please enter description' autoSize={{minRows:2,maxRows:5}}/>\r\n              </Item>\r\n              <Item name='price' initialValue={product.price} \r\n                rules={[ \r\n                  { required: true, message: 'Price is required' },\r\n                  { validator: this.validatePrice}\r\n                ]} \r\n                label='Price'>\r\n                <Input type='number' addonAfter='CAD' placeholder='Please enter price'/>\r\n              </Item>\r\n              <Item name='categoryIds' initialValue={categorys} \r\n                rules={[{required:true,message: 'Please specify category'},]} \r\n                label='Product Category'>\r\n                <Cascader\r\n                  placeholder='Please specify category'\r\n                  options={this.state.options}  \r\n                  loadData={this.loadData}   \r\n                />\r\n              </Item>\r\n              <Item label='product-images'>\r\n                <ImageSection ref={this.pw} imgs={imgs}/>\r\n              </Item>\r\n              <Item>\r\n                <Button onClick={this.submit} type='primary'>Submit</Button>\r\n              </Item>\r\n            </Form>\r\n          </Card>\r\n        )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {List, Button, Card } from 'antd'\r\nimport { ArrowLeftOutlined } from '@ant-design/icons';\r\nimport { BASE_IMG_URL } from '../../utils/constants'\r\nimport  {queryCategory} from '../../request/index'\r\nimport './product-detail.less'\r\n\r\nexport default class ProductDetail extends Component {\r\n  state = {\r\n    mainCat: '',  // Main Category\r\n    subCat: '',   // Sub Category\r\n  }\r\n\r\n  // Load targeted product's category attribute \r\n  async componentDidMount() {\r\n    const {pCategoryId, categoryId} = this.props.location.state.product\r\n    if (pCategoryId === '0') {   \r\n      const result = await queryCategory(categoryId)\r\n      const mainCat = result.data.name  \r\n      this.setState({mainCat})\r\n    } else {\r\n      const results = await Promise.all([queryCategory(pCategoryId),queryCategory(categoryId)])\r\n      const mainCat = results[0].data.name\r\n      const subCat = results[1].data.name \r\n     \r\n      this.setState({mainCat, subCat})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {name, desc, price, imgs} = this.props.location.state.product\r\n    const {mainCat, subCat} = this.state\r\n\r\n    const title = (\r\n      <span>\r\n          <Button type=\"link\">\r\n            <ArrowLeftOutlined \r\n            style={{marginRight:10,fontSize:20}}\r\n            onClick={()=>this.props.history.goBack()}/>\r\n          </Button>\r\n        <span>Product Detail</span>\r\n      </span>\r\n    )\r\n  return (\r\n    <Card title={title} className='product-detail'>\r\n      <List>\r\n          <List.Item>\r\n            <p className='left'>Product Name:</p>\r\n            <p className='left-desc'>{name}</p>\r\n          </List.Item>\r\n          <List.Item>\r\n            <p className='left'>Description:</p>\r\n            <p className='left-desc'>{desc}</p>\r\n          </List.Item>\r\n          <List.Item>\r\n            <p className='left'>Price:</p>\r\n            <p className='left-desc'>${price}</p>\r\n          </List.Item>\r\n          <List.Item>\r\n            <p className='left'>Category:</p>\r\n            <p className='left-desc'>{mainCat} {subCat ? '--->' + subCat : ''}</p>\r\n          </List.Item>\r\n          <List.Item>\r\n            <p className='left'>Images:</p>\r\n            <p className='left-desc'>\r\n             {\r\n              imgs.map(img => {\r\n                  return(\r\n                    <img \r\n                    key={img}\r\n                    className='product-img'\r\n                    src={BASE_IMG_URL + img} alt=\"Product Image\"\r\n                    style={{width:200,height:200}}\r\n                    /> \r\n                  )\r\n              })\r\n            } \r\n            </p>\r\n          </List.Item>\r\n      </List>\r\n    </Card>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Route, Switch, Redirect} from 'react-router-dom'\r\nimport ProductSummary from './product-summary'\r\nimport ProductAddUpdate from './addupdateModel/add-update'\r\nimport ProductDetail from './product-detail'\r\nimport './product.less'\r\n \r\n// Product Routes\r\nconst Product = (props) => {\r\n    return (\r\n        <Switch>\r\n            <Route path='/product' component={ProductSummary} exact/>\r\n            <Route path='/product/addupdate' component={ProductAddUpdate} />\r\n            <Route path='/product/detail' component={ProductDetail} />\r\n            <Redirect to='/product' />\r\n        </Switch>\r\n    )\r\n}\r\nexport default Product;\r\n","import React from 'react'\nimport {Input, Form} from 'antd'\nimport Layout from 'antd/lib/layout/layout';\n\n// Create new account\nconst AddModel = (props) => {\n  const [form] = Form.useForm();\n  props.setForm(form)\n  return (\n    <Form form={form}>   \n      <Form.Item label='Role name' {...Layout} \n        rules={[{ required: true, message: 'Accout role name is required' }]}\n        name='roleName' initialValue=''\n      >\n        <Input placeholder='Please enter accout role name'/>\n      </Form.Item>\n    </Form>\n  )\n}\nexport default AddModel\n","import React,{ Component } from 'react'\nimport {Form, Input, Tree } from 'antd'\nimport menuList from '../../config/menuConfig'\nimport PropTypes from 'prop-types'\n\n// Change account accessibility \nexport default class AuthModel extends Component {\n  static propTypes = {\n    role: PropTypes.object\n  }\n  constructor(props) {\n    super(props)\n    const {menus} = this.props.role\n\n    this.state = {\n      treeData: [{\n        title: 'Platform Accessibility',\n        key: 'all',\n        children: []\n    }],\n      checkedKeys: menus,\n    }\n  }\n\n  // Use new prop role to update checkedKeys\n  componentWillReceiveProps(nextProps){\n    const menus = nextProps.role.menus\n    this.setState({\n      checkedKeys: menus\n    })\n  }\n  \n  getTreeNodes = (menuList) => {\n    return menuList.reduce((pre, item)=>{\n      pre.push(\n        {\n          title: item.title,\n          key: item.key,\n          children: item.children ? this.getTreeNodes(item.children):null\n        }\n      )\n      return pre\n    },[])\n  }\n  getMenus = () => this.state.checkedKeys\n  \n  onCheck = checkedKeys => {\n      this.setState({checkedKeys})\n  };\n\n  componentWillMount(){\n    let treeDatas = this.state.treeData\n    treeDatas[0].children = this.getTreeNodes(menuList)\n    this.setState({\n      treeData: treeDatas\n    })\n  } \n  \n  render() {\n    const {checkedKeys, treeData} = this.state\n    const {role} = this.props\n    return (\n        <div>\n          <Form.Item  label='Account name'>\n            <Input value={role.name} disabled/>\n          </Form.Item >\n          <Tree\n            treeData={treeData} \n            defaultExpandAll={true}\n            checkable\n            checkedKeys={{checked:checkedKeys}}\n            onCheck={this.onCheck}         \n            />\n        </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { Card , Button, Table, Modal, message} from 'antd'\nimport { connect } from 'react-redux'\nimport { loadRoles, addRole, updateRole } from '../../request/index'\nimport { formateTime } from '../../utils/dateUtils'\nimport AddModel from './addModel'\nimport AuthModel from './authModel'\n\nclass Role extends Component {\n    state = {\n      roles: [],  \n      role: {},  \n      isDisplayAdd: false,  \n      isDisplayAuth: false, \n    }\n    constructor(props){\n      super(props)\n      this.authSection = React.createRef()\n    }\n\n    createColumn = () => {\n      this.columns = [\n        {\n          title: 'Account name',\n          dataIndex: 'name',\n        },\n        {\n          title: 'Create Time',\n          dataIndex: 'create_time',\n          render: (create_time) => formateTime(create_time)\n        },\n        {\n          title: 'Autorize Time',\n          dataIndex: 'auth_time',\n          render: formateTime\n        },\n        {\n          title: 'Autorized from',\n          dataIndex: 'auth_name'\n        }\n      ] \n    }\n\n    // load account list\n    loadRoles = async () => {\n      const result = await loadRoles()\n      if (result.status === 0) {\n        const roles = result.data\n        this.setState({roles})\n      }\n    }\n\n    handleRow = (role) => {\n      return {\n        onClick: event => {\n          this.setState({role})\n        }\n      }\n    }\n\n    addRole = () => {\n      this.form.validateFields()\n      .then(async (values)=>{\n        this.setState({isDisplayAdd:false})\n        const {roleName} = values\n        this.form.resetFields()\n        const response = await addRole(roleName)\n        if (response.status === 0) {\n          const role = response.data      // New account\n          this.setState(state => ({       // Update account role\n            roles: [...state.roles, role]\n          }))\n        } else {\n          message.error('Create account fail')\n        }\n      }\n    ).catch(err => {\n        alert('Error',err)\n      });\n    }\n\n    handleCancel = () => {\n      this.form.resetFields()\n      this.setState({isDisplayAdd:false})\n    }\n\n    updateRole = async () => {\n      this.setState({ isDisplayAuth: false })\n      const role = this.state.role\n      const menus = this.authSection.current.getMenus()\n      role.menus = menus\n      role.auth_time = Date.now()\n      role.auth_name = this.props.user.username\n\n      // Request for update \n      const response = await updateRole(role)\n      if (response.status === 0) {\n        message.success('Role update success')\n        this.setState({\n          roles: [...this.state.roles]\n        }) \n      }\n    }\n\n    handleCancelChange = () => {\n      this.setState({isDisplayAuth:false})\n    }\n    componentDidMount(){\n      this.loadRoles()\n    }\n    componentWillMount(){\n      this.createColumn()\n    }\n\n    render() {\n        const {role, roles, isDisplayAdd, isDisplayAuth} = this.state\n\n        const title = (\n          <span>\n            <Button style={{marginRight: \"20px\"}} onClick={()=>{this.setState({isDisplayAdd: true})}} type='primary'>Create account</Button> \n            <Button type='primary' disabled={!role._id}\n             onClick={()=>{this.setState({isDisplayAuth: true})}} >Update accessibility</Button>\n          </span>\n        )\n        return (\n          <Card title={title}>\n            <Table \n              bordered  \n              rowKey='_id'\n              dataSource={roles}\n              columns={this.columns}\n              pagination={{defaultPageSize: 5}}\n              rowSelection={{\n                type:'radio', \n                selectedRowKeys:[role._id],\n                onSelect: (role)=>{this.setState({role})}\n              }}\n              onRow={this.handleRow} \n            />\n            <Modal \n              title='Create account'\n              visible={isDisplayAdd}\n              onOk={this.addRole}\n              onCancel={this.handleCancel}\n            >\n              <AddModel setForm={form =>this.form = form} />\n            </Modal>\n            <Modal \n              title='Set account accessibility'\n              visible={isDisplayAuth}\n              onOk={this.updateRole}\n              onCancel={this.handleCancelChange}\n            >\n              <AuthModel ref={this.authSection} role={role}/>\n            </Modal>\n          </Card>\n        )\n    }\n}\n\nexport default connect(\n  state => ({user:state.user})\n)(Role)","import React, { Component } from 'react'\r\nimport { Row, Col, Button } from 'antd'\r\n\r\nexport default class NotFound extends Component {\r\n    goHome = () => {\r\n      this.props.history.replace('/home')\r\n    }\r\n    render() {\r\n        return (\r\n          <Row className='not-found'>\r\n            <Col span={12} className='left'></Col>\r\n            <Col span={12} className='right'>\r\n              <h1>404</h1>\r\n              <h2>Sorry, the request page is not find</h2>\r\n              <div>\r\n                <Button type='primary' onClick={this.goHome}>\r\n                  Back to dashboard\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux'\r\n\r\nimport LeftNav from '../../components/left-nav'\r\nimport Header from '../../components/header'\r\nimport Dashboard from '../dashboard/dashboard'\r\nimport Category from '../category/category'\r\nimport Product from '../product/product'\r\n\r\nimport Role from '../role/role'\r\nimport NotFound from '../404/404'\r\n\r\nconst { Footer, Sider, Content } = Layout;\r\n\r\n// Router management\r\nclass Routes extends Component { \r\n    render() {\r\n        const user = this.props.user\r\n        if(!user || !user._id) {\r\n            return <Redirect to = '/login'/> \r\n        }\r\n        return (\r\n            <Layout style={{ minHeight:'100%' }}>\r\n              <Sider>\r\n                  <LeftNav/>\r\n              </Sider>\r\n              <Layout>\r\n                <Header/>\r\n                <Content style={{ margin:'20px', backgroundColor:'#fff'}}>\r\n                  <Switch>\r\n                    <Redirect exact={true} from='/' to='/dashboard'/>\r\n                    <Route path='/dashboard' component={ Dashboard }/>\r\n                    <Route path='/category' component={ Category }/>\r\n                    <Route path='/product' component={ Product }/>\r\n                    <Route path='/role' component={ Role }/>\r\n                    \r\n                    <Route component={ NotFound }/>\r\n                  </Switch>\r\n                </Content>\r\n                <Footer style={{textAlign:'right', color:'#ccc'}}>Made by Kexin Wen</Footer>\r\n              </Layout>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user: state.user})\r\n)(Routes)\r\n","import React from 'react'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\n\nimport Login from './pages/login/login'\nimport Routes from './pages/routeList/routes'\n\nconst App = (props) => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/login' component={Login}></Route>\n        <Route path='/' component={Routes}></Route>\n      </Switch>\n    </BrowserRouter>\n  )\n}\nexport default App;\n\n","import { combineReducers } from 'redux'\r\nimport storageUtils from '../utils/storageUtils'\r\n\r\nimport {\r\n  GET_USER,\r\n  CLEAR_USER,\r\n  ERROR_MSG,\r\n  SET_TITLE,\r\n} from './action-types'\r\n\r\nfunction user(state = storageUtils.getUser(), action){\r\n  switch(action.type) {\r\n    case GET_USER:\r\n      return action.user\r\n    case ERROR_MSG:\r\n      const errorMsg = action.errorMsg\r\n      return {...state, errorMsg}\r\n    case CLEAR_USER:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction headTitle(state = 'Dashboard', action){\r\n  switch(action.type) {\r\n    case SET_TITLE:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  user,\r\n  headTitle,\r\n})","import {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport reducer from './reducer'\r\n\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))","import ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root'))\n"],"sourceRoot":""}